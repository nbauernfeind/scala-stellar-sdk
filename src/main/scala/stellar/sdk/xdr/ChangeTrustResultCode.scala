// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  enum ChangeTrustResultCode
//  {
//      // codes considered as "success" for the operation
//      CHANGE_TRUST_SUCCESS = 0,
//      // codes considered as "failure" for the operation
//      CHANGE_TRUST_MALFORMED = -1,     // bad input
//      CHANGE_TRUST_NO_ISSUER = -2,     // could not find issuer
//      CHANGE_TRUST_INVALID_LIMIT = -3, // cannot drop limit below balance
//                                       // cannot create with a limit of 0
//      CHANGE_TRUST_LOW_RESERVE =
//          -4, // not enough funds to create a new trust line,
//      CHANGE_TRUST_SELF_NOT_ALLOWED = -5 // trusting self is not allowed
//  };

//  ===========================================================================

sealed class ChangeTrustResultCode (val i: Int) {
  def encode(stream: XdrDataOutputStream) = stream.writeInt(i)
}

object ChangeTrustResultCode {
  def decode(stream: XdrDataInputStream): ChangeTrustResultCode = stream.readInt() match {
    case 0 => CHANGE_TRUST_SUCCESS
    case -1 => CHANGE_TRUST_MALFORMED
    case -2 => CHANGE_TRUST_NO_ISSUER
    case -3 => CHANGE_TRUST_INVALID_LIMIT
    case -4 => CHANGE_TRUST_LOW_RESERVE
    case -5 => CHANGE_TRUST_SELF_NOT_ALLOWED
    case i => throw new IllegalArgumentException(s"ChangeTrustResultCode value $i is invalid")
  }

  case object CHANGE_TRUST_SUCCESS extends ChangeTrustResultCode(0)
  case object CHANGE_TRUST_MALFORMED extends ChangeTrustResultCode(-1)
  case object CHANGE_TRUST_NO_ISSUER extends ChangeTrustResultCode(-2)
  case object CHANGE_TRUST_INVALID_LIMIT extends ChangeTrustResultCode(-3)
  case object CHANGE_TRUST_LOW_RESERVE extends ChangeTrustResultCode(-4)
  case object CHANGE_TRUST_SELF_NOT_ALLOWED extends ChangeTrustResultCode(-5)
}
