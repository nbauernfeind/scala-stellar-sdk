// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  enum CryptoKeyType
//  {
//      KEY_TYPE_ED25519 = 0,
//      KEY_TYPE_PRE_AUTH_TX = 1,
//      KEY_TYPE_HASH_X = 2
//  };

//  ===========================================================================

sealed class CryptoKeyType (val i: Int) {
  def encode(stream: XdrDataOutputStream) = stream.writeInt(i)
}

object CryptoKeyType {
  def decode(stream: XdrDataInputStream): CryptoKeyType = stream.readInt() match {
    case 0 => KEY_TYPE_ED25519
    case 1 => KEY_TYPE_PRE_AUTH_TX
    case 2 => KEY_TYPE_HASH_X
    case i => throw new IllegalArgumentException(s"CryptoKeyType value $i is invalid")
  }

  case object KEY_TYPE_ED25519 extends CryptoKeyType(0)
  case object KEY_TYPE_PRE_AUTH_TX extends CryptoKeyType(1)
  case object KEY_TYPE_HASH_X extends CryptoKeyType(2)
}
