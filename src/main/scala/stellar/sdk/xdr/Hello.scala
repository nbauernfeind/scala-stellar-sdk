// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  struct Hello
//  {
//      uint32 ledgerVersion;
//      uint32 overlayVersion;
//      uint32 overlayMinVersion;
//      Hash networkID;
//      string versionStr<100>;
//      int listeningPort;
//      NodeID peerID;
//      AuthCert cert;
//      uint256 nonce;
//  };

//  ===========================================================================

case class Hello (
  ledgerVersion: Uint32, 
  overlayVersion: Uint32, 
  overlayMinVersion: Uint32, 
  networkID: Hash, 
  versionStr: String, 
  listeningPort: Int, 
  peerID: NodeID, 
  cert: AuthCert, 
  nonce: Uint256
) {
  def encode(stream: XdrDataOutputStream): Unit = {
    ledgerVersion.encode(stream)
    overlayVersion.encode(stream)
    overlayMinVersion.encode(stream)
    networkID.encode(stream)
    stream.writeString(versionStr)
    stream.writeInt(listeningPort)
    peerID.encode(stream)
    cert.encode(stream)
    nonce.encode(stream)
  }
}

object Hello {
  def decode(stream: XdrDataInputStream): Hello = Hello(
    Uint32.decode(stream),
    Uint32.decode(stream),
    Uint32.decode(stream),
    Hash.decode(stream),
    stream.readString,
    stream.readInt,
    NodeID.decode(stream),
    AuthCert.decode(stream),
    Uint256.decode(stream)
  )
}
