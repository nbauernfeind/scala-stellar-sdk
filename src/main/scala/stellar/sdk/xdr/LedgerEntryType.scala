// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  enum LedgerEntryType
//  {
//      ACCOUNT = 0,
//      TRUSTLINE = 1,
//      OFFER = 2,
//      DATA = 3
//  };

//  ===========================================================================

sealed class LedgerEntryType (val i: Int) {
  def encode(stream: XdrDataOutputStream) = stream.writeInt(i)
}

object LedgerEntryType {
  def decode(stream: XdrDataInputStream): LedgerEntryType = stream.readInt() match {
    case 0 => ACCOUNT
    case 1 => TRUSTLINE
    case 2 => OFFER
    case 3 => DATA
    case i => throw new IllegalArgumentException(s"LedgerEntryType value $i is invalid")
  }

  case object ACCOUNT extends LedgerEntryType(0)
  case object TRUSTLINE extends LedgerEntryType(1)
  case object OFFER extends LedgerEntryType(2)
  case object DATA extends LedgerEntryType(3)
}
