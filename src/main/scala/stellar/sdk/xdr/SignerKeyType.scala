// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  enum SignerKeyType
//  {
//      SIGNER_KEY_TYPE_ED25519 = KEY_TYPE_ED25519,
//      SIGNER_KEY_TYPE_PRE_AUTH_TX = KEY_TYPE_PRE_AUTH_TX,
//      SIGNER_KEY_TYPE_HASH_X = KEY_TYPE_HASH_X
//  };

//  ===========================================================================

sealed class SignerKeyType (val i: Int) {
  def encode(stream: XdrDataOutputStream) = stream.writeInt(i)
}

object SignerKeyType {
  def decode(stream: XdrDataInputStream): SignerKeyType = stream.readInt() match {
    case 0 => SIGNER_KEY_TYPE_ED25519
    case 1 => SIGNER_KEY_TYPE_PRE_AUTH_TX
    case 2 => SIGNER_KEY_TYPE_HASH_X
    case i => throw new IllegalArgumentException(s"SignerKeyType value $i is invalid")
  }

  case object SIGNER_KEY_TYPE_ED25519 extends SignerKeyType(0)
  case object SIGNER_KEY_TYPE_PRE_AUTH_TX extends SignerKeyType(1)
  case object SIGNER_KEY_TYPE_HASH_X extends SignerKeyType(2)
}
