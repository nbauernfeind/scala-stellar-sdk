// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  union SCPHistoryEntry switch (int v)
//  {
//  case 0:
//      SCPHistoryEntryV0 v0;
//  };

//  ===========================================================================

sealed trait SCPHistoryEntry {
  def encode(stream: XdrDataOutputStream): Unit
}

object SCPHistoryEntry {
  def decode(stream: XdrDataInputStream): SCPHistoryEntry = stream.readInt match {
    case 0 => R_0(SCPHistoryEntryV0.decode(stream))
    case d => throw new IllegalArgumentException(s"Int value $d is invalid")
  }

  case class R_0(x: SCPHistoryEntryV0) extends SCPHistoryEntry {
    def encode(stream: XdrDataOutputStream): Unit = {
      stream.writeInt(0)
      x.encode(stream)
    }
  }
}
