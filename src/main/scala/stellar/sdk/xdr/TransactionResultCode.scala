// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  enum TransactionResultCode
//  {
//      txSUCCESS = 0, // all operations succeeded
//  
//      txFAILED = -1, // one of the operations failed (none were applied)
//  
//      txTOO_EARLY = -2,         // ledger closeTime before minTime
//      txTOO_LATE = -3,          // ledger closeTime after maxTime
//      txMISSING_OPERATION = -4, // no operation was specified
//      txBAD_SEQ = -5,           // sequence number does not match source account
//  
//      txBAD_AUTH = -6,             // too few valid signatures / wrong network
//      txINSUFFICIENT_BALANCE = -7, // fee would bring account below reserve
//      txNO_ACCOUNT = -8,           // source account not found
//      txINSUFFICIENT_FEE = -9,     // fee is too small
//      txBAD_AUTH_EXTRA = -10,      // unused signatures attached to transaction
//      txINTERNAL_ERROR = -11       // an unknown error occured
//  };

//  ===========================================================================

sealed class TransactionResultCode (val i: Int) {
  def encode(stream: XdrDataOutputStream) = stream.writeInt(i)
}

object TransactionResultCode {
  def decode(stream: XdrDataInputStream): TransactionResultCode = stream.readInt() match {
    case 0 => TxSUCCESS
    case -1 => TxFAILED
    case -2 => txTOO_EARLY
    case -3 => txTOO_LATE
    case -4 => txMISSING_OPERATION
    case -5 => txBAD_SEQ
    case -6 => txBAD_AUTH
    case -7 => txINSUFFICIENT_BALANCE
    case -8 => txNO_ACCOUNT
    case -9 => txINSUFFICIENT_FEE
    case -10 => txBAD_AUTH_EXTRA
    case -11 => txINTERNAL_ERROR
    case i => throw new IllegalArgumentException(s"TransactionResultCode value $i is invalid")
  }

  case object TxSUCCESS extends TransactionResultCode(0)
  case object TxFAILED extends TransactionResultCode(-1)
  case object txTOO_EARLY extends TransactionResultCode(-2)
  case object txTOO_LATE extends TransactionResultCode(-3)
  case object txMISSING_OPERATION extends TransactionResultCode(-4)
  case object txBAD_SEQ extends TransactionResultCode(-5)
  case object txBAD_AUTH extends TransactionResultCode(-6)
  case object txINSUFFICIENT_BALANCE extends TransactionResultCode(-7)
  case object txNO_ACCOUNT extends TransactionResultCode(-8)
  case object txINSUFFICIENT_FEE extends TransactionResultCode(-9)
  case object txBAD_AUTH_EXTRA extends TransactionResultCode(-10)
  case object txINTERNAL_ERROR extends TransactionResultCode(-11)
}
