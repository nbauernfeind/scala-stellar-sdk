// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  enum EnvelopeType
//  {
//      ENVELOPE_TYPE_SCP = 1,
//      ENVELOPE_TYPE_TX = 2,
//      ENVELOPE_TYPE_AUTH = 3
//  };

//  ===========================================================================

sealed class EnvelopeType (val i: Int) {
  def encode(stream: XdrDataOutputStream) = stream.writeInt(i)
}

object EnvelopeType {
  def decode(stream: XdrDataInputStream): EnvelopeType = stream.readInt() match {
    case 1 => ENVELOPE_TYPE_SCP
    case 2 => ENVELOPE_TYPE_TX
    case 3 => ENVELOPE_TYPE_AUTH
    case i => throw new IllegalArgumentException(s"EnvelopeType value $i is invalid")
  }

  case object ENVELOPE_TYPE_SCP extends EnvelopeType(1)
  case object ENVELOPE_TYPE_TX extends EnvelopeType(2)
  case object ENVELOPE_TYPE_AUTH extends EnvelopeType(3)
}
