// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  struct TransactionEnvelope
//  {
//      Transaction tx;
//      /* Each decorated signature is a signature over the SHA256 hash of
//       * a TransactionSignaturePayload */
//      DecoratedSignature signatures<20>;
//  };

//  ===========================================================================

case class TransactionEnvelope (
  tx: Transaction, 
  signatures: Array[DecoratedSignature]
) {
  def encode(stream: XdrDataOutputStream): Unit = {
    tx.encode(stream)
    stream.writeInt(signatures.length)
    signatures.foreach { _.encode(stream) }
  }
}

object TransactionEnvelope {
  def decode(stream: XdrDataInputStream): TransactionEnvelope = TransactionEnvelope(
    Transaction.decode(stream),
    (0 until stream.readInt).map(_ => DecoratedSignature.decode(stream)).toArray
  )
}
