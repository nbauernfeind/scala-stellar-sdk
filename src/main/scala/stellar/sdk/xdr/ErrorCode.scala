// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  enum ErrorCode
//  {
//      ERR_MISC = 0, // Unspecific error
//      ERR_DATA = 1, // Malformed data
//      ERR_CONF = 2, // Misconfiguration error
//      ERR_AUTH = 3, // Authentication failure
//      ERR_LOAD = 4  // System overloaded
//  };

//  ===========================================================================

sealed class ErrorCode (val i: Int) {
  def encode(stream: XdrDataOutputStream) = stream.writeInt(i)
}

object ErrorCode {
  def decode(stream: XdrDataInputStream): ErrorCode = stream.readInt() match {
    case 0 => ERR_MISC
    case 1 => ERR_DATA
    case 2 => ERR_CONF
    case 3 => ERR_AUTH
    case 4 => ERR_LOAD
    case i => throw new IllegalArgumentException(s"ErrorCode value $i is invalid")
  }

  case object ERR_MISC extends ErrorCode(0)
  case object ERR_DATA extends ErrorCode(1)
  case object ERR_CONF extends ErrorCode(2)
  case object ERR_AUTH extends ErrorCode(3)
  case object ERR_LOAD extends ErrorCode(4)
}
