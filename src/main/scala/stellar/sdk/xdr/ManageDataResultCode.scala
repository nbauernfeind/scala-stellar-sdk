// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  enum ManageDataResultCode
//  {
//      // codes considered as "success" for the operation
//      MANAGE_DATA_SUCCESS = 0,
//      // codes considered as "failure" for the operation
//      MANAGE_DATA_NOT_SUPPORTED_YET =
//          -1, // The network hasn't moved to this protocol change yet
//      MANAGE_DATA_NAME_NOT_FOUND =
//          -2, // Trying to remove a Data Entry that isn't there
//      MANAGE_DATA_LOW_RESERVE = -3, // not enough funds to create a new Data Entry
//      MANAGE_DATA_INVALID_NAME = -4 // Name not a valid string
//  };

//  ===========================================================================

sealed class ManageDataResultCode (val i: Int) {
  def encode(stream: XdrDataOutputStream) = stream.writeInt(i)
}

object ManageDataResultCode {
  def decode(stream: XdrDataInputStream): ManageDataResultCode = stream.readInt() match {
    case 0 => MANAGE_DATA_SUCCESS
    case -1 => MANAGE_DATA_NOT_SUPPORTED_YET
    case -2 => MANAGE_DATA_NAME_NOT_FOUND
    case -3 => MANAGE_DATA_LOW_RESERVE
    case -4 => MANAGE_DATA_INVALID_NAME
    case i => throw new IllegalArgumentException(s"ManageDataResultCode value $i is invalid")
  }

  case object MANAGE_DATA_SUCCESS extends ManageDataResultCode(0)
  case object MANAGE_DATA_NOT_SUPPORTED_YET extends ManageDataResultCode(-1)
  case object MANAGE_DATA_NAME_NOT_FOUND extends ManageDataResultCode(-2)
  case object MANAGE_DATA_LOW_RESERVE extends ManageDataResultCode(-3)
  case object MANAGE_DATA_INVALID_NAME extends ManageDataResultCode(-4)
}
