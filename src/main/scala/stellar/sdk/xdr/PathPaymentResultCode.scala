// Automatically generated by xdrgen
// DO NOT EDIT or your changes may be overwritten

package stellar.sdk.xdr

import stellar.sdk.xdr._

// === xdr source ============================================================

//  enum PathPaymentResultCode
//  {
//      // codes considered as "success" for the operation
//      PATH_PAYMENT_SUCCESS = 0, // success
//  
//      // codes considered as "failure" for the operation
//      PATH_PAYMENT_MALFORMED = -1,          // bad input
//      PATH_PAYMENT_UNDERFUNDED = -2,        // not enough funds in source account
//      PATH_PAYMENT_SRC_NO_TRUST = -3,       // no trust line on source account
//      PATH_PAYMENT_SRC_NOT_AUTHORIZED = -4, // source not authorized to transfer
//      PATH_PAYMENT_NO_DESTINATION = -5,     // destination account does not exist
//      PATH_PAYMENT_NO_TRUST = -6,           // dest missing a trust line for asset
//      PATH_PAYMENT_NOT_AUTHORIZED = -7,     // dest not authorized to hold asset
//      PATH_PAYMENT_LINE_FULL = -8,          // dest would go above their limit
//      PATH_PAYMENT_NO_ISSUER = -9,          // missing issuer on one asset
//      PATH_PAYMENT_TOO_FEW_OFFERS = -10,    // not enough offers to satisfy path
//      PATH_PAYMENT_OFFER_CROSS_SELF = -11,  // would cross one of its own offers
//      PATH_PAYMENT_OVER_SENDMAX = -12       // could not satisfy sendmax
//  };

//  ===========================================================================

sealed class PathPaymentResultCode (val i: Int) {
  def encode(stream: XdrDataOutputStream) = stream.writeInt(i)
}

object PathPaymentResultCode {
  def decode(stream: XdrDataInputStream): PathPaymentResultCode = stream.readInt() match {
    case 0 => PATH_PAYMENT_SUCCESS
    case -1 => PATH_PAYMENT_MALFORMED
    case -2 => PATH_PAYMENT_UNDERFUNDED
    case -3 => PATH_PAYMENT_SRC_NO_TRUST
    case -4 => PATH_PAYMENT_SRC_NOT_AUTHORIZED
    case -5 => PATH_PAYMENT_NO_DESTINATION
    case -6 => PATH_PAYMENT_NO_TRUST
    case -7 => PATH_PAYMENT_NOT_AUTHORIZED
    case -8 => PATH_PAYMENT_LINE_FULL
    case -9 => PATH_PAYMENT_NO_ISSUER
    case -10 => PATH_PAYMENT_TOO_FEW_OFFERS
    case -11 => PATH_PAYMENT_OFFER_CROSS_SELF
    case -12 => PATH_PAYMENT_OVER_SENDMAX
    case i => throw new IllegalArgumentException(s"PathPaymentResultCode value $i is invalid")
  }

  case object PATH_PAYMENT_SUCCESS extends PathPaymentResultCode(0)
  case object PATH_PAYMENT_MALFORMED extends PathPaymentResultCode(-1)
  case object PATH_PAYMENT_UNDERFUNDED extends PathPaymentResultCode(-2)
  case object PATH_PAYMENT_SRC_NO_TRUST extends PathPaymentResultCode(-3)
  case object PATH_PAYMENT_SRC_NOT_AUTHORIZED extends PathPaymentResultCode(-4)
  case object PATH_PAYMENT_NO_DESTINATION extends PathPaymentResultCode(-5)
  case object PATH_PAYMENT_NO_TRUST extends PathPaymentResultCode(-6)
  case object PATH_PAYMENT_NOT_AUTHORIZED extends PathPaymentResultCode(-7)
  case object PATH_PAYMENT_LINE_FULL extends PathPaymentResultCode(-8)
  case object PATH_PAYMENT_NO_ISSUER extends PathPaymentResultCode(-9)
  case object PATH_PAYMENT_TOO_FEW_OFFERS extends PathPaymentResultCode(-10)
  case object PATH_PAYMENT_OFFER_CROSS_SELF extends PathPaymentResultCode(-11)
  case object PATH_PAYMENT_OVER_SENDMAX extends PathPaymentResultCode(-12)
}
